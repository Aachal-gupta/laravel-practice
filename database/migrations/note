<!-- // database crate by terminal cammand -->
php artisan make:migration create_tablename_table
php artisan migrate 
<!-- // start xamp and show database laravel and in that table student /tablename + migration table which form auto
//make column in side that file which is make after execution of cammand   -->


<!-- //******* CHECK STATUS OF TABLE IN DB********* -->
php artisan migrate:status

<!-- //******Rollback ****** -->
php artisan migrate:rollback
<!-- // this cmmand will be delete last table from db which i made at last time and if we want to back that tabke return for that  -->
<!-- //cmaand is-> -->
php artisan migrate

<!-- //*******delete particular table in db******* -->
php artisan migrate:rollback --batch=2
<!-- //you can watch batch no. in migration table batch no=2 will be delete table -->

<!-- //*****aALL TABLE WILL BE DELETE **** -->
php artisan migrate:reset   //all table will be deleted except migration table 
<!-- //we can do back mean all deleted table will appear by -> php artisan migrate -->

<!-- //*******  RESET  ******* -->
<!-- // after edit in file you have to write cmmand -->
php artisan migrate:reset // it will be delete all table and then make all table 
php artisan migrate


<!-- //******* Add to column with Migration ****** */ -->
<!-- 3 steps    in  the place of update_students_table we can take any name like update-stu  --> 
 1) php artisan make:migration update_students_table --table=students   //a file is made update_student_table
2) modify in file update_students_table
3)php artisan migrate 

<!--********************************************
     *every table name will be plural form      *
     * like students, users,projects            *
     *at the end 's'letter should be take place * 
     ********************************************-->

     <!-- //Rename column
             $table->renameColumn('cities','city'); //if our mysql version is greater than 10 sthan only it will work
            //  remove column
             $table->dropColumn('id');

             
              //rename table  make file php artisan make:migration table_migration
        Schema::rename('student','students');
        // delete table 
        // Schema::dropIfExists('users'); -->

        <!-- endation-2 -->

        <!-- migration primary and foreign key -->
        php artisan make:migration create_c-students_table
        Schema::create('students', function (Blueprint $table) {
            $table->id();
            $table->string('Name',40);
            $table->string('Email',50)->nullable()->unique();

        });

        <!-- foreign key with Cascade -->
         <!-- if we want to change data in db table that column which is primary and foreign key -->
          

*******************************************************************************************************************************************
SEEDERS    and  STEPS                                          |
****************************************************|
insert date by seeding in two method|
                                    |->seeder   means Real data insert in table
                                    |->factory  means Fake data insert in table
For that there is 5 method 
1> create database
2> create database migration -> mean create tables in database
3>Seeding    -> means insert data fake/real
4>create model
5>camaand ->   php artisna db:seed 

*4> first make model -> php artisan make :model student 
don't take 's' in students , it will create student.php file in model folder

*3> maake seeder file-> php artisan make:seeder StudentSeeder
it will create a studentseeder file in database/seeder folder
in seeder file add path of model file student like->use App/Models/student

*) in create migration file add $table->timestamps();
in /studentSeeder.php file  write data in key value parse_ini_file and in databseSeeder file call that mathod which is in declare
in studentSeeder.php file ->likethis call function 

$this->call([
    StudentSeeder::class      <!--write here class name in studentSeeder  file  -->
    ]);
   <!-- after that run this command  -->
    php artisna migrate:refresh 
     <!--this cammand will delete all table and make/execute all table but data will be deleted  -->
     php artisna db:seed  


*****************************************************|
Fake data in database table                          |               
*****************************************************|
create factory file 
php artisan make:factory StudentFactory
for refresh-> php artisan migrate:refresh
add data command-> php artisan db:seed

//migration and seeding data both at single cmd
php artisan migrate:fresh --seed



*****************************************************|
            Create Model                             |
Query builder -->controller                          |               
*****************************************************|

*) perform CRUD operation on db


-------------
* Read data *   
-------------
